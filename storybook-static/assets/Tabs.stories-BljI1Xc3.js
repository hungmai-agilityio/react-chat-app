import{j as n}from"./jsx-runtime-Cw0GR0a5.js";import{r as m}from"./index-CTjT7uj6.js";import{T as d}from"./index-DGTiEEd8.js";import"./clsx-B-dksMZM.js";const s=m.memo(({list:o,onClick:l,index:c})=>n.jsx("div",{className:"w-full border-b-xs border-gray-200 flex items-center",children:o.map(t=>n.jsx(d,{value:t.value,title:t.title,index:c,onClick:l},t.value))}));s.__docgenInfo={description:"",methods:[],displayName:"Tabs",props:{list:{required:!0,tsType:{name:"Array",elements:[{name:"Omit",elements:[{name:"ITab"},{name:"union",raw:"'index' | 'onClick'",elements:[{name:"literal",value:"'index'"},{name:"literal",value:"'onClick'"}]}],raw:"Omit<ITab, 'index' | 'onClick'>"}],raw:"Omit<ITab, 'index' | 'onClick'>[]"},description:""},index:{required:!0,tsType:{name:"string"},description:""},onClick:{required:!0,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"event"}],return:{name:"void"}}},description:""}}};const b={component:s,tags:["autodocs"],argTypes:{list:{description:"Render dynamic react node children"},index:{description:"Tab position order"},onClick:{description:"Handle event when click "}}},u=[{title:"Tab 1",value:"1"},{title:"Tab 2",value:"2"}],e={args:{list:u,index:"2",onClick:()=>alert("Tab click")}};var a,r,i;e.parameters={...e.parameters,docs:{...(a=e.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    list: list,
    index: '2',
    onClick: () => alert('Tab click')
  }
}`,...(i=(r=e.parameters)==null?void 0:r.docs)==null?void 0:i.source}}};const g=["Default"];export{e as Default,g as __namedExportsOrder,b as default};
